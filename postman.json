{
  "info": {
    "name": "Expense Splitter APIs",
    "description": "Complete API collection for testing expense splitting backend system",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "expense-splitter-collection",
    "version": {
      "major": 1,
      "minor": 0,
      "patch": 0
    }
  },
  "item": [
    {
      "name": "üìÅ Expense Management",
      "item": [
        {
          "name": "Add Expense - Dinner (‚Çπ600, paid by Shantanu)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 600.00,\n    \"description\": \"Dinner at restaurant\",\n    \"paid_by\": \"Shantanu\",\n    \"category\": \"Food\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses",
              "host": ["{{base_url}}"],
              "path": ["expenses"]
            },
            "description": "Adds a dinner expense of ‚Çπ600 paid by Shantanu. This will be split equally among all people."
          }
        },
        {
          "name": "Add Expense - Groceries (‚Çπ450, paid by Sanket)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 450.00,\n    \"description\": \"Weekly groceries\",\n    \"paid_by\": \"Sanket\",\n    \"category\": \"Food\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses",
              "host": ["{{base_url}}"],
              "path": ["expenses"]
            },
            "description": "Adds groceries expense of ‚Çπ450 paid by Sanket."
          }
        },
        {
          "name": "Add Expense - Petrol (‚Çπ300, paid by Om)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 300.00,\n    \"description\": \"Petrol for trip\",\n    \"paid_by\": \"Om\",\n    \"category\": \"Travel\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses",
              "host": ["{{base_url}}"],
              "path": ["expenses"]
            },
            "description": "Adds petrol expense of ‚Çπ300 paid by Om."
          }
        },
        {
          "name": "Add Expense - Movie Tickets (‚Çπ500, paid by Shantanu)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 500.00,\n    \"description\": \"Movie tickets for weekend\",\n    \"paid_by\": \"Shantanu\",\n    \"category\": \"Entertainment\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses",
              "host": ["{{base_url}}"],
              "path": ["expenses"]
            },
            "description": "Adds movie tickets expense of ‚Çπ500 paid by Shantanu."
          }
        },
        {
          "name": "Add Expense - Pizza (‚Çπ280, paid by Sanket)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 280.00,\n    \"description\": \"Pizza for lunch\",\n    \"paid_by\": \"Sanket\",\n    \"category\": \"Food\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses",
              "host": ["{{base_url}}"],
              "path": ["expenses"]
            },
            "description": "Adds pizza expense of ‚Çπ280 paid by Sanket. This expense will later be deleted to test deletion."
          }
        },
        {
          "name": "List All Expenses",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/expenses",
              "host": ["{{base_url}}"],
              "path": ["expenses"]
            },
            "description": "Retrieves all expenses in the system, sorted by creation date (newest first)."
          }
        },
        {
          "name": "Update Expense - Change Petrol to ‚Çπ350",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 350.00,\n    \"description\": \"Petrol for trip - Updated\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses/{{petrol_expense_id}}",
              "host": ["{{base_url}}"],
              "path": ["expenses", "{{petrol_expense_id}}"]
            },
            "description": "Updates the petrol expense amount from ‚Çπ300 to ‚Çπ350. Note: You'll need to replace {{petrol_expense_id}} with actual expense ID from the list expenses response."
          }
        },
        {
          "name": "Delete Expense - Remove Pizza",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/expenses/{{pizza_expense_id}}",
              "host": ["{{base_url}}"],
              "path": ["expenses", "{{pizza_expense_id}}"]
            },
            "description": "Deletes the pizza expense. Note: You'll need to replace {{pizza_expense_id}} with actual expense ID from the list expenses response."
          }
        }
      ],
      "description": "All expense management operations including create, read, update, and delete."
    },
    {
      "name": "üìÅ Settlements & People",
      "item": [
        {
          "name": "Get All People (should show: Shantanu, Sanket, Om)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/people",
              "host": ["{{base_url}}"],
              "path": ["people"]
            },
            "description": "Returns all unique people derived from expenses. Should show Shantanu, Sanket, and Om after adding the sample expenses."
          }
        },
        {
          "name": "Get Current Balances (after all transactions)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/balances",
              "host": ["{{base_url}}"],
              "path": ["balances"]
            },
            "description": "Shows current balance for each person. Positive balance means they are owed money, negative means they owe money."
          }
        },
        {
          "name": "Get Settlement Summary (optimized transactions)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/settlements",
              "host": ["{{base_url}}"],
              "path": ["settlements"]
            },
            "description": "Returns optimized settlement suggestions to minimize the number of transactions needed to settle all debts."
          }
        }
      ],
      "description": "Settlement calculations and people management endpoints."
    },
    {
      "name": "üìÅ Edge Cases & Validation",
      "item": [
        {
          "name": "Add Expense - Invalid (negative amount)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": -100.00,\n    \"description\": \"Invalid negative amount\",\n    \"paid_by\": \"Shantanu\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses",
              "host": ["{{base_url}}"],
              "path": ["expenses"]
            },
            "description": "Tests validation by trying to add an expense with negative amount. Should return 400 Bad Request."
          }
        },
        {
          "name": "Add Expense - Invalid (empty description)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 100.00,\n    \"description\": \"\",\n    \"paid_by\": \"Shantanu\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses",
              "host": ["{{base_url}}"],
              "path": ["expenses"]
            },
            "description": "Tests validation by trying to add an expense with empty description. Should return 400 Bad Request."
          }
        },
        {
          "name": "Add Expense - Invalid (missing paid_by)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 100.00,\n    \"description\": \"Missing paid_by field\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses",
              "host": ["{{base_url}}"],
              "path": ["expenses"]
            },
            "description": "Tests validation by trying to add an expense without paid_by field. Should return 400 Bad Request."
          }
        },
        {
          "name": "Update Non-existent Expense",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 200.00,\n    \"description\": \"Updated expense\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses/60f1b2b8e1b2c8a1b2c3d4e5",
              "host": ["{{base_url}}"],
              "path": ["expenses", "60f1b2b8e1b2c8a1b2c3d4e5"]
            },
            "description": "Tests error handling by trying to update a non-existent expense. Should return 404 Not Found."
          }
        },
        {
          "name": "Delete Non-existent Expense",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/expenses/60f1b2b8e1b2c8a1b2c3d4e6",
              "host": ["{{base_url}}"],
              "path": ["expenses", "60f1b2b8e1b2c8a1b2c3d4e6"]
            },
            "description": "Tests error handling by trying to delete a non-existent expense. Should return 404 Not Found."
          }
        },
        {
          "name": "Get Balances - With No Expenses",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/balances",
              "host": ["{{base_url}}"],
              "path": ["balances"]
            },
            "description": "Tests behavior when no expenses exist. Run this before adding any expenses to see empty state handling."
          }
        }
      ],
      "description": "Tests for input validation, error handling, and edge cases."
    },
    {
      "name": "üìÅ Advanced Features",
      "item": [
        {
          "name": "Add Expense - Percentage Split",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 1000.00,\n    \"description\": \"Rent for apartment\",\n    \"paid_by\": \"Shantanu\",\n    \"split_type\": \"percentage\",\n    \"split_details\": {\n        \"Shantanu\": 40,\n        \"Sanket\": 35,\n        \"Om\": 25\n    },\n    \"category\": \"Utilities\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses",
              "host": ["{{base_url}}"],
              "path": ["expenses"]
            },
            "description": "Adds an expense with percentage-based split: Shantanu 40%, Sanket 35%, Om 25%."
          }
        },
        {
          "name": "Add Expense - Exact Amount Split",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 600.00,\n    \"description\": \"Shopping - different items for each person\",\n    \"paid_by\": \"Sanket\",\n    \"split_type\": \"exact\",\n    \"split_details\": {\n        \"Shantanu\": 200.00,\n        \"Sanket\": 250.00,\n        \"Om\": 150.00\n    },\n    \"category\": \"Other\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses",
              "host": ["{{base_url}}"],
              "path": ["expenses"]
            },
            "description": "Adds an expense with exact amount split: Shantanu ‚Çπ200, Sanket ‚Çπ250, Om ‚Çπ150."
          }
        }
      ],
      "description": "Advanced features like different split types and categories."
    },
    {
      "name": "API Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/",
          "host": ["{{base_url}}"],
          "path": [""]
        },
        "description": "Health check endpoint to verify API is running and see available endpoints."
      }
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set base URL if not already set",
          "if (!pm.environment.get('base_url')) {",
          "    pm.environment.set('base_url', 'https://expense-splitter-backend.railway.app');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "https://expense-splitter-backend.railway.app",
      "description": "Base URL of the deployed API. Update this with your actual deployment URL."
    },
    {
      "key": "petrol_expense_id",
      "value": "",
      "description": "ID of the petrol expense for update/delete operations. Get this from the list expenses response."
    },
    {
      "key": "pizza_expense_id",
      "value": "",
      "description": "ID of the pizza expense for delete operation. Get this from the list expenses response."
    }
  ]
}